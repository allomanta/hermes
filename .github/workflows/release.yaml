name: Build on Push

on:
  push:
    branches:
      - main  

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  create_release:
    runs-on: ubuntu-latest
    permissions:
      contents: write 
    outputs:
      upload_url: ${{ steps.release.outputs.upload_url }}
    steps:
      - name: Create Draft Pre-release
        id: release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: build-${{ github.sha }}
          name: "Build ${{ github.sha }}"
          body: "Automated build for commit ${{ github.sha }}"
          draft: true
          prerelease: true

  build_web:
    needs: create_release
    runs-on: ubuntu-latest
    permissions:
      contents: write 
    steps:
      - uses: actions/checkout@v4
      - run: cat .github/workflows/versions.env >> $GITHUB_ENV
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: true
      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install nodejs -y
      - uses: moonrepo/setup-rust@v1
      - run: rustup component add rust-src --toolchain nightly-x86_64-unknown-linux-gnu
      - run: flutter pub get
      - name: Prepare web
        run: ./scripts/prepare-web.sh
      - run: rm ./assets/vodozemac/.gitignore
      - name: Build Release Web
        run: flutter build web --dart-define=FLUTTER_WEB_CANVASKIT_URL=canvaskit/ --release --source-maps --base-href "/web/"
      - name: Create archive
        run: tar -czf hermes-web.tar.gz build/web/
      - name: Upload to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: hermes-web.tar.gz
          asset_name: hermes-web.tar.gz
          asset_content_type: application/gzip
      - name: Install and build tailwindcss
        working-directory: docs
        run: |
          npm install tailwindcss @tailwindcss/cli
          npx tailwindcss -o ./tailwind.css
      - name: Build Website
        run: |
          mv docs public
          mv repo public || true
          mv build/web/ public/web
          cp public/web -r public/nightly
      - name: Deploy to GitHub Pages
        if: startsWith(github.ref, 'refs/tags/v')
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public
          publish_branch: gh-pages
          cname: hermes.im

  build_apk:
    needs: create_release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - run: cat .github/workflows/versions.env >> $GITHUB_ENV
      - uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'zulu'
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: true
      - name: Apply Google Services Patch
        run: git apply ./scripts/enable-android-google-services.patch
      - uses: moonrepo/setup-rust@v1
      - run: flutter pub get
      - name: Prepare Android Release Build
        env:
          FDROID_KEY: ${{ secrets.FDROID_KEY }}
          FDROID_KEY_PASS: ${{ secrets.FDROID_KEY_PASS }}
          PLAYSTORE_DEPLOY_KEY: ${{ secrets.PLAYSTORE_DEPLOY_KEY }}
        run: ./scripts/prepare-android-release.sh
      - run: flutter build apk --release
      - name: Upload to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: build/app/outputs/apk/release/app-release.apk
          asset_name: hermes.apk
          asset_content_type: application/vnd.android.package-archive

  build_linux:
    needs: create_release
    strategy:
      matrix:
        arch: [ x64, arm64 ]
    runs-on: ${{ matrix.arch == 'arm64' && 'self-hosted' || 'ubuntu-latest'}}
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - run: cat .github/workflows/versions.env >> $GITHUB_ENV
      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install curl clang cmake ninja-build pkg-config libgtk-3-dev libblkid-dev liblzma-dev libjsoncpp-dev cmake-data libsecret-1-dev libsecret-1-0 librhash0 libssl-dev libwebkit2gtk-4.1-dev -y
      - name: Install Flutter
        run: |
          git clone --branch ${{ env.FLUTTER_VERSION }} https://github.com/flutter/flutter.git
          ./flutter/bin/flutter doctor
      - uses: moonrepo/setup-rust@v1
      - run: ./flutter/bin/flutter pub get
      - run: ./flutter/bin/flutter build linux --target-platform linux-${{ matrix.arch }}
      - name: Create archive
        run: tar -czf hermes-linux-${{ matrix.arch }}.tar.gz -C build/linux/${{ matrix.arch }}/release/bundle/ .
      - name: Upload to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: hermes-linux-${{ matrix.arch }}.tar.gz
          asset_name: hermes-linux-${{ matrix.arch }}.tar.gz
          asset_content_type: application/gzip

  deploy_docker:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
